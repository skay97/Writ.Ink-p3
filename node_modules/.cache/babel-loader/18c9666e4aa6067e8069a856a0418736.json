{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _warning = _interopRequireDefault(require(\"warning\"));\n\nvar _responsivePropType = _interopRequireDefault(require(\"./responsivePropType\"));\n\nvar _breakpoints = require(\"./breakpoints\");\n\nvar _merge = _interopRequireDefault(require(\"./merge\"));\n\nvar _memoize = _interopRequireDefault(require(\"./memoize\"));\n\nvar properties = {\n  m: 'margin',\n  p: 'padding'\n};\nvar directions = {\n  t: 'Top',\n  r: 'Right',\n  b: 'Bottom',\n  l: 'Left',\n  x: ['Left', 'Right'],\n  y: ['Top', 'Bottom']\n}; // memoize() impact:\n// From 300,000 ops/sec\n// To 350,000 ops/sec\n\nvar getCssProperties = (0, _memoize.default)(function (prop) {\n  // It's not a shorthand notation.\n  if (prop.length > 3) {\n    return [prop];\n  }\n\n  var _prop$split = prop.split(''),\n      _prop$split2 = (0, _slicedToArray2.default)(_prop$split, 2),\n      a = _prop$split2[0],\n      b = _prop$split2[1];\n\n  var property = properties[a];\n  var direction = directions[b] || '';\n  return Array.isArray(direction) ? direction.map(function (dir) {\n    return property + dir;\n  }) : [property + direction];\n});\nvar spacingKeys = ['m', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'p', 'pt', 'pr', 'pb', 'pl', 'px', 'py', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft'];\n\nfunction getTransformer(theme) {\n  var themeTransformer = theme.spacing && theme.spacing.unit != null ? theme.spacing.unit : theme.spacing || 8;\n\n  if (typeof themeTransformer === 'number') {\n    return function (abs) {\n      return themeTransformer * abs;\n    };\n  }\n\n  if (Array.isArray(themeTransformer)) {\n    return function (abs) {\n      process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(abs <= themeTransformer.length - 1, [\"@material-ui/system: the value provided (\".concat(abs, \") overflows.\"), \"The supported values are: \".concat(JSON.stringify(themeTransformer), \".\"), \"\".concat(abs, \" > \").concat(themeTransformer.length - 1, \", you need to add the missing values.\")].join('\\n')) : void 0;\n      return themeTransformer[abs];\n    };\n  }\n\n  if (typeof themeTransformer === 'function') {\n    return themeTransformer;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(false, [\"@material-ui/system: the `theme.spacing` value (\".concat(themeTransformer, \") is invalid.\"), 'It should be a number, an array or a function.'].join('\\n')) : void 0;\n  return function () {\n    return undefined;\n  };\n}\n\nfunction getValue(transformer, propValue) {\n  if (typeof propValue === 'string') {\n    return propValue;\n  }\n\n  var abs = Math.abs(propValue);\n  var transformed = transformer(abs);\n\n  if (propValue >= 0) {\n    return transformed;\n  }\n\n  if (typeof transformed === 'number') {\n    return -transformed;\n  }\n\n  return \"-\".concat(transformed);\n}\n\nfunction getStyleFromPropValue(cssProperties, transformer) {\n  return function (propValue) {\n    return cssProperties.reduce(function (acc, cssProperty) {\n      acc[cssProperty] = getValue(transformer, propValue);\n      return acc;\n    }, {});\n  };\n}\n\nfunction spacing(props) {\n  var theme = props.theme;\n  var transformer = getTransformer(theme);\n  return Object.keys(props).map(function (prop) {\n    // Using a hash computation over an array iteration could be faster, but with only 14 items,\n    // it's doesn't worth the bundle size.\n    if (spacingKeys.indexOf(prop) === -1) {\n      return null;\n    }\n\n    var cssProperties = getCssProperties(prop);\n    var styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);\n    var propValue = props[prop];\n    return (0, _breakpoints.handleBreakpoints)(props, propValue, styleFromPropValue);\n  }).reduce(_merge.default, {});\n}\n\nspacing.propTypes = process.env.NODE_ENV !== 'production' ? spacingKeys.reduce(function (obj, key) {\n  obj[key] = _responsivePropType.default;\n  return obj;\n}, {}) : {};\nspacing.filterProps = spacingKeys;\nvar _default = spacing;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}