{"version":3,"sources":["../src/Navbar.js"],"names":["Navbar","buttonBaseClass","className","showPreviousButton","showNextButton","onPreviousClick","onNextClick","dir","previousClickHandler","nextClickHandler","previousButton","nextButton","NavbarPropTypes","string","bool","func","propTypes","defaultProps"],"mappings":";;;;;;kBAIwBA,M;;AAJxB;;;;;;AAEA,IAAMC,kBAAkB,yCAAxB;;AAEe,SAASD,MAAT,OAOZ;AAAA,MANDE,SAMC,QANDA,SAMC;AAAA,MALDC,kBAKC,QALDA,kBAKC;AAAA,MAJDC,cAIC,QAJDA,cAIC;AAAA,MAHDC,eAGC,QAHDA,eAGC;AAAA,MAFDC,WAEC,QAFDA,WAEC;AAAA,MADDC,GACC,QADDA,GACC;;AACD,MAAMC,uBAAuBD,QAAQ,KAAR,GAAgBD,WAAhB,GAA8BD,eAA3D;AACA,MAAMI,mBAAmBF,QAAQ,KAAR,GAAgBF,eAAhB,GAAkCC,WAA3D;;AAEA,MAAMI,iBAAiBP,sBACrB;AACE,UAAK,QADP;AAEE,SAAI,UAFN;AAGE,eAAeF,eAAf,WAHF;AAIE,aAAU;AAAA,aAAMO,sBAAN;AAAA;AAJZ,IADF;;AAQA,MAAMG,aAAaP,kBACjB;AACE,UAAK,QADP;AAEE,SAAI,OAFN;AAGE,eAAeH,eAAf,WAHF;AAIE,aAAU;AAAA,aAAMQ,kBAAN;AAAA;AAJZ,IADF;;AAQA,SACE;AAAA;AAAA,MAAK,WAAYP,SAAjB;AACGK,YAAQ,KAAR,GAAgB,CAACI,UAAD,EAAaD,cAAb,CAAhB,GAA+C,CAACA,cAAD,EAAiBC,UAAjB;AADlD,GADF;AAKD;;AAEM,IAAMC,4CAAkB;AAC7BV,aAAW,iBAAUW,MADQ;AAE7BV,sBAAoB,iBAAUW,IAFD;AAG7BV,kBAAgB,iBAAUU,IAHG;AAI7BT,mBAAiB,iBAAUU,IAJE;AAK7BT,eAAa,iBAAUS,IALM;AAM7BR,OAAK,iBAAUM;AANc,CAAxB;;AASPb,OAAOgB,SAAP,GAAmBJ,eAAnB;;AAEAZ,OAAOiB,YAAP,GAAsB;AACpBf,aAAW,kBADS;AAEpBK,OAAK,KAFe;AAGpBJ,sBAAoB,IAHA;AAIpBC,kBAAgB;AAJI,CAAtB","file":"Navbar.js","sourcesContent":["import React, { PropTypes } from 'react';\n\nconst buttonBaseClass = 'DayPicker-NavButton DayPicker-NavButton';\n\nexport default function Navbar({\n  className,\n  showPreviousButton,\n  showNextButton,\n  onPreviousClick,\n  onNextClick,\n  dir,\n}) {\n  const previousClickHandler = dir === 'rtl' ? onNextClick : onPreviousClick;\n  const nextClickHandler = dir === 'rtl' ? onPreviousClick : onNextClick;\n\n  const previousButton = showPreviousButton &&\n    <span\n      role=\"button\"\n      key=\"previous\"\n      className={ `${buttonBaseClass}--prev` }\n      onClick={ () => previousClickHandler() }\n    />;\n\n  const nextButton = showNextButton &&\n    <span\n      role=\"button\"\n      key=\"right\"\n      className={ `${buttonBaseClass}--next` }\n      onClick={ () => nextClickHandler() }\n    />;\n\n  return (\n    <div className={ className }>\n      {dir === 'rtl' ? [nextButton, previousButton] : [previousButton, nextButton]}\n    </div>\n  );\n}\n\nexport const NavbarPropTypes = {\n  className: PropTypes.string,\n  showPreviousButton: PropTypes.bool,\n  showNextButton: PropTypes.bool,\n  onPreviousClick: PropTypes.func,\n  onNextClick: PropTypes.func,\n  dir: PropTypes.string,\n};\n\nNavbar.propTypes = NavbarPropTypes;\n\nNavbar.defaultProps = {\n  className: 'DayPicker-NavBar',\n  dir: 'ltr',\n  showPreviousButton: true,\n  showNextButton: true,\n};\n"]}